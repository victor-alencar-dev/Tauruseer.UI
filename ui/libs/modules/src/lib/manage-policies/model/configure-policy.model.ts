import {
  FormDropDownList,
  FormMultiSelect,
  FormSwitch,
  MapEnumToObject,
  ProductEnumsReference,
} from '@tauruseer/core';
import { IButtonIndicator } from '@tauruseer/module';

export const policyConfigure: Array<IButtonIndicator> = [
  {
    title: 'Details',
    hasIndicator: false,
    to: 'policy-detail',
  },
  {
    title: 'Conditions',
    hasIndicator: false,
    to: 'policy-conditions',
  },
  {
    title: 'Rules',
    hasIndicator: false,
    to: 'policy-rules',
  },
];
export const FormToolLayout = [
  {
    display: 'row',
    content: [
      {
        id: 'tools',
        name: 'tools',
        label: 'Tools',
        rounded: 'medium',
        textField: 'title',
        dataItemKey: 'id',
        data: MapEnumToObject(ProductEnumsReference.ToolStatus),
        fillMode: 'outline',
        size: 'large',
        component: FormDropDownList,
      },
      {
        id: 'toolType',
        name: 'toolType',
        label: 'Tool Type',
        rounded: 'medium',
        textField: 'title',
        dataItemKey: 'id',
        data: MapEnumToObject(ProductEnumsReference.ToolStatus),
        fillMode: 'outline',
        size: 'large',
        component: FormDropDownList,
      },
      {
        id: 'technologies',
        name: 'technologies',
        label: 'Technologies',
        rounded: 'medium',
        textField: 'title',
        dataItemKey: 'id',
        data: MapEnumToObject(ProductEnumsReference.ToolStatus),
        fillMode: 'outline',
        size: 'large',
        component: FormDropDownList,
      },
    ],
  },
  {
    display: 'row',
    content: [
      {
        id: 'cloudResourcesType',
        name: 'cloudResourcesType',
        label: 'Cloud Resources Type',
        rounded: 'medium',
        textField: 'title',
        data: MapEnumToObject(ProductEnumsReference.ToolStatus),
        fillMode: 'outline',
        size: 'large',
        component: FormDropDownList,
      },
      {
        id: 'dependencies',
        name: 'dependencies',
        label: 'Dependencies',
        rounded: 'medium',
        textField: 'title',
        data: MapEnumToObject(ProductEnumsReference.ToolStatus),
        fillMode: 'outline',
        size: 'large',
        component: FormDropDownList,
      },
      {
        id: 'active',
        name: 'active',
        label: 'Active',
        component: FormSwitch,
      },
    ],
  },
];

export const FormConditionsLayout = {
  generalInformation: [
    {
      display: 'row',
      content: [
        {
          id: 'policyScope',
          name: 'policyScope',
          label: 'Policy Scope',
          rounded: 'medium',
          textField: 'title',
          dataItemKey: 'id',
          data: MapEnumToObject(ProductEnumsReference.PolicyScope),
          fillMode: 'outline',
          defaultItem: { title: 'Select  Scope' },
          size: 'large',
          component: FormDropDownList,
        },
        // {
        //   id: 'portfolio',
        //   name: 'portfolio',
        //   label: 'Portfolio',
        //   rounded: 'medium',
        //   textField: 'title',
        //   dataItemKey: 'id',
        //   //data: MapEnumToObject(ProductEnumsReference.BusinessCriticalities),
        //   fillMode: 'outline',
        //   defaultItem: { title: 'Select portfolio' },
        //   size: 'large',
        //   component: FormDropDownList,
        // },
      ],
    },
  ],
  businessImpact: [
    {
      display: 'row',
      content: [
        {
          id: 'businessCriticality',
          name: 'businessCriticality',
          label: 'Business Criticality',
          rounded: 'medium',
          textField: 'title',
          dataItemKey: 'id',
          data: MapEnumToObject(ProductEnumsReference.BusinessCriticalities),
          fillMode: 'outline',
          defaultItem: 'Select level',
          size: 'large',
          component: FormMultiSelect,
        },
        {
          id: 'businessPurpose',
          name: 'businessPurpose',
          label: 'Business Purpose',
          rounded: 'medium',
          textField: 'title',
          dataItemKey: 'id',
          data: MapEnumToObject(ProductEnumsReference.BusinessPurposes),
          fillMode: 'outline',
          placeholder: 'Select purpose',
          size: 'large',
          component: FormMultiSelect,
        },
        {
          id: 'strategicOutcome',
          name: 'strategicOutcome',
          label: 'Strategic Outcome',
          rounded: 'medium',
          textField: 'title',
          dataItemKey: 'id',
          data: MapEnumToObject(ProductEnumsReference.OutcomeCategoryTypes),
          fillMode: 'outline',
          placeholder: 'Select outcome',
          size: 'large',
          component: FormMultiSelect,
        },
      ],
    },
    {
      display: 'row',
      content: [
        {
          id: 'lifeCycleStage',
          name: 'lifeCycleStage',
          label: 'Life Cycle Stage',
          rounded: 'medium',
          textField: 'title',
          dataItemKey: 'id',
          data: MapEnumToObject(ProductEnumsReference.LifeCycleStages),
          fillMode: 'outline',
          placeholder: 'Select  cycle stage',
          size: 'large',
          component: FormMultiSelect,
        },
      ],
    },
  ],
};
