# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- develop

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '5b4367d7-2966-46b3-9d1e-055de680402e'
  imageRepository: 'tauruseerremixdev'
  containerRegistry: 'tauruseer.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/ui/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: SonarQubePrepare@5
      inputs:
        SonarQube: 'SonarQube'
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: 'Platform_Tauruseer.UI_AYj9-PCUyiT-t01hivXX'
        cliProjectName: 'Tauruseer UI'
        cliSources: '$(Build.SourcesDirectory)/ui'
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: AzureRmWebAppDeployment@4
      displayName: Deploy image to WebApp Container
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'ts-dev-RG-service-connection'
        appType: 'webAppContainer'
        WebAppName: 'ts-dev-remix'
        DockerNamespace: '$(containerRegistry)'
        DockerRepository: '$(imageRepository)'
        DockerImageTag: '$(tag)'
    - task: SonarQubeAnalyze@5
      inputs:
        jdkversion: 'JAVA_HOME_11_X64'
    - task: SonarQubePublish@5
      inputs:
        pollingTimeoutSec: '300'