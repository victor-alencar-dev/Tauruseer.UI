import {
  FormDropDownList,
  FormMultiSelect,
  MapEnumToObject,
  ProductEnumsReference,
} from '@tauruseer/core';
import { ITeamMember } from '../../../model/teams.interface';
import { AvatarList, AvatarRenderValue } from './custom-content-list';
export const controlsMonitoring = [
  { text: '1' },
  { text: '2' },
  { text: '3' },
  { text: '4' },
  { text: '5' },
];
export const FormInputLayout = {
  riskOwners: [
    {
      display: 'row my-1',
      content: [
        {
          id: 'productOwner',
          name: 'productOwner',
          label: 'Product Owner',
          rounded: 'medium',
          itemRender: AvatarList,
          valueRender: AvatarRenderValue,
          style: { height: '58px' },
          textField: 'name',
          dataItemKey: 'id',
          data: [] as ITeamMember[],
          fillMode: 'outline',
          size: 'large',
          component: FormDropDownList,
        },

        {
          id: 'technicalLead',
          name: 'technicalLead',
          label: 'Technical Lead',
          rounded: 'medium',
          itemRender: AvatarList,
          valueRender: AvatarRenderValue,
          style: { height: '58px' },
          textField: 'name',
          dataItemKey: 'id',
          data: [] as ITeamMember[],
          fillMode: 'outline',
          size: 'large',
          component: FormDropDownList,
        },

        {
          id: 'securityLead',
          name: 'securityLead',
          label: 'Security Lead',
          rounded: 'medium',
          itemRender: AvatarList,
          valueRender: AvatarRenderValue,
          style: { height: '58px' },
          textField: 'name',
          dataItemKey: 'id',
          data: [] as ITeamMember[],
          fillMode: 'outline',
          size: 'large',
          component: FormDropDownList,
        },

        {
          id: 'portfolioOwner',
          name: 'portfolioOwner',
          label: 'Portfolio Owner',
          rounded: 'medium',
          itemRender: AvatarList,
          valueRender: AvatarRenderValue,
          style: { height: '58px' },
          textField: 'name',
          dataItemKey: 'id',
          data: [] as ITeamMember[],
          fillMode: 'outline',
          size: 'large',
          component: FormDropDownList,
        },
      ],
    },
  ],
  businessImpact: [
    {
      display: 'row my-1',
      content: [
        {
          id: 'internetExposure',
          name: 'internetExposure',
          label: 'Internet Exposure',
          rounded: 'medium',
          textField: 'title',
          dataItemKey: 'id',
          data: MapEnumToObject(ProductEnumsReference.InternetExposure),
          fillMode: 'outline',
          defaultItem: { title: 'Select Internet exposure' },
          size: 'large',
          component: FormDropDownList,
        },
        {
          id: 'businessCriticality',
          name: 'businessCriticality',
          label: 'Business Criticality',
          rounded: 'medium',
          textField: 'title',
          dataItemKey: 'id',
          data: MapEnumToObject(ProductEnumsReference.BusinessCriticalities),
          fillMode: 'outline',
          defaultItem: { title: 'Select level' },
          size: 'large',
          component: FormDropDownList,
        },
        {
          id: 'strategicOutcome',
          name: 'strategicOutcome',
          label: 'Strategic Outcome',
          rounded: 'medium',
          textField: 'title',
          dataItemKey: 'id',
          data: MapEnumToObject(ProductEnumsReference.OutcomeCategoryTypes),
          fillMode: 'outline',
          defaultItem: { title: 'Select outcome' },
          size: 'large',
          component: FormDropDownList,
        },
      ],
    },
    {
      display: 'row my-1',
      content: [
        {
          id: 'businessUnit',
          name: 'businessUnit',
          label: 'Business Unit',
          rounded: 'medium',
          textField: 'title',
          data: [],
          fillMode: 'outline',
          defaultItem: { title: 'Select business units' },
          size: 'large',
          component: FormDropDownList,
        },
        {
          id: 'tags',
          name: 'tags',
          label: 'Tags',
          rounded: 'medium',
          textField: 'title',
          data: [],
          fillMode: 'outline',
          defaultItem: { title: 'Select all tags' },
          size: 'large',
          component: FormDropDownList,
        },
      ],
    },
  ],
  compliance: [
    {
      display: 'row my-1',
      content: [
        {
          id: 'regulatoryCompliance',
          name: 'regulatoryCompliance',
          label: 'Regulatory Compliance',
          rounded: 'medium',
          textField: 'title',
          dataItemKey: 'id',
          data: MapEnumToObject(ProductEnumsReference.Regulation),
          fillMode: 'outline',
          placeholder: 'Select compliance',
          size: 'large',
          component: FormMultiSelect,
        },
        {
          id: 'sensitiveData',
          name: 'sensitiveData',
          label: 'Sensitive Data',
          rounded: 'medium',
          textField: 'title',
          dataItemKey: 'id',
          data: MapEnumToObject(ProductEnumsReference.SensitiveDataClassification),
          fillMode: 'outline',
          placeholder: 'Select sensitive data',
          size: 'large',
          component: FormMultiSelect,
        },
      ],
    },
  ],
};
